<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Use dbc wide pom first. Set relative path to empty, to force it to get it from the repos -->
    <parent>
        <groupId>dk.dbc</groupId>
        <artifactId>microservice-pom</artifactId>
        <version>latest-SNAPSHOT</version>
        <relativePath></relativePath>
    </parent>

    <artifactId>rawrepo-record-service</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Rawrepo Record Service</name>

    <properties>
        <serviceutils.version>0.1-SNAPSHOT</serviceutils.version>
        <slf4j.version>1.7.25</slf4j.version>
        <microprofile.version>1.2</microprofile.version>
        <perf4j.version>0.9.16</perf4j.version>
        <hamcrest.version>1.3</hamcrest.version>
        <rawrepo.scm.url>https://raw.githubusercontent.com/DBCDK/rawrepo/master/access/schema</rawrepo.scm.url>
        <rawrepo.download.url>src/test/resources/dk/dbc/rawrepo/schema</rawrepo.download.url>
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>mavenrepo.dbc.dk</id>
            <url>http://mavenrepo.dbc.dk/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>mavenrepo.dbc.dk</id>
            <url>http://mavenrepo.dbc.dk/content/groups/public</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>rawrepo-access</artifactId>
            <version>1.13-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>dbc-commons-marc</artifactId>
            <version>1.3-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>serviceutils</artifactId>
            <version>${serviceutils.version}</version>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>httpclient</artifactId>
            <version>0.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>dbc-commons-jdbc-util</artifactId>
            <version>1.3-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>stopwatch</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.opentable.components</groupId>
            <artifactId>otj-pg-embedded</artifactId>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit5.version}</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit5.version}</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <version>${microprofile.version}</version> <!-- version 1.2 available since Payara v4.1.2.181 -->
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>1.3.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fetch-rawrepo-sql</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${rawrepo.scm.url}/rawrepo.sql</url>
                            <outputDirectory>${rawrepo.download.url}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>fetch-queuerules-sql</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${rawrepo.scm.url}/queuerules.sql</url>
                            <outputDirectory>${rawrepo.download.url}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>build</executable>
                            <arguments>
                                <argument>docker</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
    </plugins>
    </build>

</project>
